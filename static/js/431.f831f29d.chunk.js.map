{"version":3,"file":"static/js/431.f831f29d.chunk.js","mappings":"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","sources":["api.js","components/Loader/Loader.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","pages/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/movie/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMGRjNDlhZTViNGU1NjZmOTRiM2Q0YmIyYzRmNzU0MCIsInN1YiI6IjY1YjdjZWJmMGZiMTdmMDE3YjM0ZmE1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k8B34-vuhkf17vWcOVLlbZyRATlzvrIuKqvZCYtsF38';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(baseURL + 'popular');\n  return response.data;\n};\n\nexport const fetchDetailsMovie = async id => {\n  const response = await axios.get(baseURL + id);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(baseURL + id + '/credits');\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(baseURL + id + '/reviews');\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie?query=' + query\n  );\n  return response.data.results;\n};\n","import { LineWave } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <LineWave\n      height=\"200\"\n      width=\"400\"\n      color=\"#242E34\"\n      ariaLabel=\"line-wave-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      firstLineColor=\"\"\n      middleLineColor=\"\"\n      lastLineColor=\"\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieCard = styled.div`\n  width: 90%;\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n  float: left;\n\n  margin-right: ${p => p.theme.spacing(5)};\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 15px;\n\n  margin-top: ${p => p.theme.spacing(5)};\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const GenresItem = styled.li`\n  &::after {\n    content: ',';\n  }\n  &:last-child::after {\n    content: '.';\n  }\n`;\n\nexport const Information = styled.div`\n  width: 100%;\n`;\n\nexport const InformationLinksList = styled.ul`\n  padding: ${p => p.theme.spacing(3)};\n`;\n\nexport const BackLink = styled.b`\n  width: 100px;\n  text-align: center;\n  display: block;\n\n  padding: ${p => p.theme.spacing(2)};\n  margin-bottom: ${p => p.theme.spacing(2)};\n\n  border: 1px solid #ccc;\n  border-radius: ${p => p.theme.spacing(3)};\n`;\n","import { useState, useEffect, Suspense, useRef } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n  Link,\n} from 'react-router-dom';\nimport { fetchDetailsMovie } from 'api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  CardWrapper,\n  MovieCard,\n  Image,\n  GenresList,\n  GenresItem,\n  Information,\n  InformationLinksList,\n  BackLink,\n} from './MovieDetails.styled';\n\nexport const MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchStatus, setIsFetchStatus] = useState(false);\n  const params = useParams();\n\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  useEffect(() => {\n    if (fetchStatus) {\n      return;\n    }\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const initialMoviesDetails = await fetchDetailsMovie(params.movieId);\n        setMovieDetails(initialMoviesDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsFetchStatus(true);\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, [fetchStatus, movieDetails, params.movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <Link to={backLinkRef.current.state?.from ?? '/'}>\n        <BackLink>Back</BackLink>\n      </Link>\n      {movieDetails.poster_path && (\n        <CardWrapper>\n          <MovieCard>\n            <Image\n              src={'https://image.tmdb.org/t/p/w500' + movieDetails.poster_path}\n              alt={movieDetails.title}\n            />\n            <h2>{movieDetails.title}</h2>\n            <p>User Score: {Math.round(movieDetails.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{movieDetails.overview}</p>\n            <h3>Genres</h3>\n            <GenresList>\n              {movieDetails.genres.map(genre => (\n                <GenresItem key={genre.id}> {genre.name} </GenresItem>\n              ))}\n            </GenresList>\n          </MovieCard>\n          <Information>\n            <h3>Additional Information</h3>\n            <InformationLinksList>\n              <li>\n                <NavLink to=\"cast\">Cast</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\">Reviews</NavLink>\n              </li>\n            </InformationLinksList>\n\n            <Suspense fallback={<div>Loading subpage...</div>}>\n              <Outlet />\n            </Suspense>\n          </Information>\n        </CardWrapper>\n      )}\n    </div>\n  );\n};\n","import { MovieDetails } from 'components/MovieDetails/MovieDetails';\n\nexport default function MovieDetailsPage() {\n  return (\n    <div>\n      <MovieDetails />\n    </div>\n  );\n}\n"],"names":["baseURL","axios","fetchPopularMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchDetailsMovie","_ref2","_callee2","id","_context2","_x","fetchCast","_ref3","_callee3","_context3","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","searchMovies","_ref5","_callee5","query","_context5","results","_x4","Loader","_jsx","LineWave","height","width","color","ariaLabel","wrapperStyle","wrapperClass","firstLineColor","middleLineColor","lastLineColor","CardWrapper","styled","_templateObject","_taggedTemplateLiteral","MovieCard","_templateObject2","Image","_templateObject3","p","theme","spacing","GenresList","_templateObject4","GenresItem","_templateObject5","Information","_templateObject6","InformationLinksList","_templateObject7","BackLink","_templateObject8","MovieDetails","_backLinkRef$current$","_backLinkRef$current$2","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","fetchStatus","setIsFetchStatus","params","useParams","location","useLocation","backLinkRef","useRef","useEffect","_getMovies","initialMoviesDetails","movieId","t0","console","log","finish","getMovies","_jsxs","children","Link","to","current","state","from","poster_path","src","alt","title","Math","round","vote_average","overview","genres","map","genre","name","NavLink","Suspense","fallback","Outlet","MovieDetailsPage"],"sourceRoot":""}